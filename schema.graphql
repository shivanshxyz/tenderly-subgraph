type Receipt @entity {
  id: ID!
  txType: Int!
  revokerId: Int!
  lastLeafIndex: Int!
  target: Bytes!
  feeAssetId: Int!
  feeValue: BigInt!
  paymaster: Bytes!
  assetMemo: Bytes!
  complianceMemo: Bytes!
  noteMemos: [Bytes!]!
  txHash: Bytes!
}

enum ZTransactionType {
    DEPOSIT,
    TRANSFER,
    WITHDRAW,
    CONVERT
}

type Note @entity {
  id: ID!
  leafIndex: Int!
  revokerId: Int!
  memo: Bytes!
  timestamp: BigInt!
}

type History @entity {
  id: ID!
  txType: Int!
  revokerId: Int!
  lastLeafIndex: Int!
  target: Bytes!
  feeAssetId: Int!
  feeValue: BigInt!
  paymaster: Bytes!
  assetMemo: Bytes!
  complianceMemo: Bytes!
  timestamp: BigInt!
  txHash: Bytes!
  blockNumber: Int!
  gasPrice: BigInt!
  gasUsed: BigInt!
}

type Commitment @entity {
  id: ID!
  leafIndex: Int!
  commitment: BigInt!
}


type RevokerData @entity {
  id: ID!
  revokerId: Int!
  revokerPublicKey: [BigInt!]!
  encryptionPublicKey: [BigInt!]!
  metadata: Bytes
  status: Boolean!
}

type AssetAdded @entity(immutable: true) {
  id: String!
  assetAddress: Bytes! # address
  assetId: Int! # uint24
  # blockNumber: BigInt!
  # blockTimestamp: BigInt!
  # transactionHash: Bytes!
}

type NullifierMarked @entity {
  id: ID!
  nullifier: BigInt!
  markLeafIndex: Int!
  # blockNumber: BigInt!
  # blockTimestamp: BigInt!
  # transactionHash: Bytes!
}

type ZTransaction @entity {
  id: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  input: Bytes!
  gasUsed: BigInt!
  gasPrice: BigInt!
  status: BigInt!
  sender: Bytes
  nonce: BigInt
  initCode: Bytes
  callData: Bytes
  accountGasLimits: Bytes
  preVerificationGas: BigInt
  gasFees: Bytes
  paymasterAndData: Bytes
  signature: Bytes
  beneficiary: Bytes
  methodId: String!
}

type RegisterAddress @entity {
  id: ID!
  sender: Bytes
  rootAddress: BigInt
  leafIndex: Int
  shieldedAddress: Bytes
}